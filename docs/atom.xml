<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title></title>
	<link href="https://gustavogarciapereira.github.io/meu_blog_com_zola/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://gustavogarciapereira.github.io/meu_blog_com_zola/"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2024-06-18T00:00:00+00:00</updated>
	<id>https://gustavogarciapereira.github.io/meu_blog_com_zola/atom.xml</id>
	<entry xml:lang="en">
		<title>Descubra o Número Único em uma Lista: Soluções com e sem XOR</title>
		<published>2024-06-18T00:00:00+00:00</published>
		<updated>2024-06-18T00:00:00+00:00</updated>
		<link href="https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/xor/" type="text/html"/>
		<id>https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/xor/</id>
		<content type="html">&lt;h3 id=&quot;encontrando-o-numero-unico-em-uma-lista-com-e-sem-xor&quot;&gt;Encontrando o Número Único em uma Lista com e sem XOR&lt;&#x2F;h3&gt;
&lt;p&gt;Em muitos problemas de programação, é comum lidar com listas onde todos os elementos, exceto um, aparecem exatamente duas vezes. Encontrar o número único pode ser uma tarefa interessante e desafiadora. Neste post, vamos explorar duas abordagens para resolver esse problema: uma usando o operador XOR e outra usando um dicionário para contar ocorrências.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;problema&quot;&gt;Problema:&lt;&#x2F;h4&gt;
&lt;p&gt;Dada uma lista de números onde cada número, exceto um, aparece exatamente duas vezes, encontre o número único.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Exemplo:&lt;&#x2F;strong&gt;
Entrada: [4, 1, 2, 1, 2]&lt;br &#x2F;&gt;
Saída: 4&lt;&#x2F;p&gt;
&lt;h3 id=&quot;solucao-1-usando-o-operador-xor&quot;&gt;Solução 1: Usando o Operador XOR&lt;&#x2F;h3&gt;
&lt;p&gt;O operador XOR (ou exclusivo) é uma operação lógica que resulta em verdadeiro (ou 1) se e somente se um dos operandos for verdadeiro (ou 1), mas não ambos. Uma propriedade interessante do XOR é que A ^ A = 0 e A ^ 0 = A. Isso significa que quando você XOR todos os números da lista, os números que aparecem em pares se cancelam, e o número que aparece uma única vez permanece.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Implementação em Python:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;def find_unique_number(nums):
    unique_number = 0
    for num in nums:
        unique_number ^= num
    return unique_number

# Exemplo de uso
nums = [4, 1, 2, 1, 2]
unique_number = find_unique_number(nums)
print(f&quot;O número único é: {unique_number}&quot;)
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;Explicação:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Inicializamos &lt;code&gt;unique_number&lt;&#x2F;code&gt; com 0.&lt;&#x2F;li&gt;
&lt;li&gt;Iteramos sobre cada número na lista &lt;code&gt;nums&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Aplicamos o operador XOR entre &lt;code&gt;unique_number&lt;&#x2F;code&gt; e o número atual.&lt;&#x2F;li&gt;
&lt;li&gt;Após a iteração, &lt;code&gt;unique_number&lt;&#x2F;code&gt; conterá o número que aparece apenas uma vez.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;solucao-2-usando-um-dicionario-para-contar-ocorrencias&quot;&gt;Solução 2: Usando um Dicionário para Contar Ocorrências&lt;&#x2F;h3&gt;
&lt;p&gt;Outra abordagem eficiente é usar um dicionário (ou o objeto &lt;code&gt;Counter&lt;&#x2F;code&gt; da biblioteca &lt;code&gt;collections&lt;&#x2F;code&gt;) para contar a ocorrência de cada número na lista. Em seguida, identificamos o número que aparece apenas uma vez.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Implementação com Dicionário:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;def find_unique_number(nums):
    count_dict = {}

    # Contar a ocorrência de cada número
    for num in nums:
        if num in count_dict:
            count_dict[num] += 1
        else:
            count_dict[num] = 1

    # Encontrar o número que aparece apenas uma vez
    for num, count in count_dict.items():
        if count == 1:
            return num

# Exemplo de uso
nums = [4, 1, 2, 1, 2]
unique_number = find_unique_number(nums)
print(f&quot;O número único é: {unique_number}&quot;)
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;Explicação:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Criamos um dicionário &lt;code&gt;count_dict&lt;&#x2F;code&gt; para armazenar a contagem de cada número.&lt;&#x2F;li&gt;
&lt;li&gt;Iteramos sobre cada número na lista e atualizamos o dicionário com a contagem de ocorrências.&lt;&#x2F;li&gt;
&lt;li&gt;Iteramos sobre o dicionário para encontrar o número que aparece apenas uma vez.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;solucao-alternativa-com-counter-da-biblioteca-collections&quot;&gt;Solução Alternativa com &lt;code&gt;Counter&lt;&#x2F;code&gt; da Biblioteca &lt;code&gt;collections&lt;&#x2F;code&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;A biblioteca &lt;code&gt;collections&lt;&#x2F;code&gt; oferece uma maneira conveniente de contar elementos usando &lt;code&gt;Counter&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Implementação com &lt;code&gt;Counter&lt;&#x2F;code&gt;:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;from collections import Counter

def find_unique_number(nums):
    # Contar a ocorrência de cada número usando Counter
    count = Counter(nums)

    # Encontrar o número que aparece apenas uma vez
    for num, freq in count.items():
        if freq == 1:
            return num

# Exemplo de uso
nums = [4, 1, 2, 1, 2]
unique_number = find_unique_number(nums)
print(f&quot;O número único é: {unique_number}&quot;)
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;conclusao&quot;&gt;Conclusão&lt;&#x2F;h3&gt;
&lt;p&gt;Ambas as abordagens apresentadas são eficientes e possuem complexidade de tempo O(n). A escolha entre usar XOR ou um dicionário depende do contexto e das preferências pessoais. O uso de XOR é elegante e usa constante espaço adicional, enquanto o uso de um dicionário é mais intuitivo e fácil de entender, especialmente para iniciantes.&lt;&#x2F;p&gt;
&lt;p&gt;Escolha a abordagem que melhor se adapta às suas necessidades e ao seu estilo de programação. Independentemente da escolha, você estará bem equipado para resolver este problema clássico de encontrar o número único em uma lista.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Texto ensasio 1</title>
		<published>2024-05-02T00:00:00+00:00</published>
		<updated>2024-05-02T00:00:00+00:00</updated>
		<link href="https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/texto-ensaio-1/" type="text/html"/>
		<id>https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/texto-ensaio-1/</id>
		<content type="html">&lt;p&gt;Enquanto refletia sobre o mundo da programação, percebi que criamos uma série de mecanismos e ferramentas que, em muitos aspectos, se assemelham a um castelo de cartas erguido diante da complexidade de nossa própria existência. Este não é um exercício filosófico, mas um esforço consciente para organizar meus pensamentos, explorar como concateno ideias e como planejo construir meu futuro. Através da escrita, leitura, reflexão e discussão, enfrento o desafio de conectar conceitos complexos, o que me prepara para futuros debates políticos, por exemplo.&lt;&#x2F;p&gt;
&lt;p&gt;Sempre que tento descrever o processo mental que envolve a construção do conhecimento, sinto uma ansiedade que me faz hesitar sobre o que colocar no papel. Este é um exercício de reflexão sobre minhas aspirações e sobre o papel que desejo desempenhar.&lt;&#x2F;p&gt;
&lt;p&gt;Hoje, enquanto pensava sobre minha carreira como programador, me dei conta de como às vezes superestimamos desenvolvimentos tecnológicos que, a curto prazo, parecem inúteis — como algumas redes sociais. Dado o imenso poder e o alto grau de vigilância que essas plataformas exercem sobre a sociedade, por vezes me questiono sobre como podemos moderar ou até mesmo interromper esse avanço desenfreado.&lt;&#x2F;p&gt;
&lt;p&gt;Em suma, essa reflexão serve como uma exploração do meu papel na interseção entre tecnologia, sociedade e desenvolvimento pessoal, buscando um equilíbrio entre a eficácia tecnológica e a responsabilidade ética.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Porque tenho blog?</title>
		<published>2024-04-18T00:00:00+00:00</published>
		<updated>2024-04-18T00:00:00+00:00</updated>
		<link href="https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/porquetenhoblog/" type="text/html"/>
		<id>https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/porquetenhoblog/</id>
		<content type="html">&lt;p&gt;Hoje entrei no Twitter fique irritado e pensando por que tem tanta coisa idiota e opinião que não vai levar a nada.
Nesse instante pensei, vou deixar um comentário aqui nesse post do twitter para mostrar minha indignação e mostrar
para essa pessoal a quão errada ela esta em pensar isso. Nesse instante parei e refleti sofre o seguinte
é exatamente isso que a porcaria da rede social quer, na verdade, é bem obvio.&lt;&#x2F;p&gt;
&lt;p&gt;Nesse instante parei e vim aqui colocar isso no meu pequeno “blog”&lt;&#x2F;p&gt;
&lt;p&gt;Ele é tudo que eu preciso por várias razões, ninguém vem aqui, poso colocar minha opinião e as pouquíssimas pessoas que chegarem aqui
são pessoas que realmente estão interessadas em ler, não é só mais um em um feed infinito
não me entenda mal, não estou condenando você por usar redes sociais, mas o ponto é você se sente mal usando uma rede social?
Por exemplo, sinto raiva, às vezes sem nem ao menos saber por que, isso me faz mal, então estou diminuindo ao máximo o uso da mesma.&lt;&#x2F;p&gt;
&lt;p&gt;Bom é isso até.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Desmistificando o Teste t Independente com Python</title>
		<published>2023-11-06T00:00:00+00:00</published>
		<updated>2023-11-06T00:00:00+00:00</updated>
		<link href="https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/test-t-ind/" type="text/html"/>
		<id>https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/test-t-ind/</id>
		<content type="html">&lt;p&gt;No mundo da estatística, o teste t independente é uma ferramenta poderosa para comparar as médias de dois grupos independentes e determinar se essas diferenças são estatisticamente significativas. Como programador, quero desvendar a aplicação prática deste teste usando o Python, uma linguagem de programação amada por sua simplicidade e potência.&lt;&#x2F;p&gt;
&lt;p&gt;Recentemente, me deparei com um conjunto de dados interessante onde duas listas distintas, &lt;code&gt;lista_A&lt;&#x2F;code&gt; e &lt;code&gt;lista_B&lt;&#x2F;code&gt;, representavam dois grupos independentes. Meu objetivo era verificar se a diferença entre as médias desses grupos era significativa ou não. Para isso, utilizei recursos da linguagem Python, mais especificamente as bibliotecas &lt;code&gt;scipy&lt;&#x2F;code&gt; e &lt;code&gt;statistics&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Primeiro, calculei as médias (&lt;code&gt;mediaA&lt;&#x2F;code&gt; e &lt;code&gt;mediaB&lt;&#x2F;code&gt;) e as variações (&lt;code&gt;varianzaA&lt;&#x2F;code&gt; e &lt;code&gt;varianzaB&lt;&#x2F;code&gt;) para cada grupo, utilizando funções como &lt;code&gt;mean()&lt;&#x2F;code&gt; e &lt;code&gt;variance()&lt;&#x2F;code&gt; da biblioteca &lt;code&gt;statistics&lt;&#x2F;code&gt;. A partir daí, estava equipado com as estatísticas descritivas necessárias para entender melhor os conjuntos de dados.&lt;&#x2F;p&gt;
&lt;p&gt;Com esses cálculos em mãos, prossegui para a essência do teste t: calcular o valor t. A fórmula que usei é um exemplo clássico de como a estatística entra no campo da programação:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;t_independente = (mediaA - mediaB) &#x2F; (sqrt((varianzaA&#x2F;nA) + (varianzaB&#x2F;nB)))&lt;&#x2F;code&gt; &lt;&#x2F;p&gt;
&lt;p&gt;Aqui, &lt;code&gt;nA&lt;&#x2F;code&gt; e &lt;code&gt;nB&lt;&#x2F;code&gt; representam o tamanho das amostras de cada grupo. Essa abordagem manual me deu um entendimento mais profundo do que está envolvido no cálculo do valor t. No entanto, no dia a dia, muitas vezes nos apoiamos em bibliotecas robustas para fazer o trabalho pesado por nós. É aí que &lt;code&gt;scipy&lt;&#x2F;code&gt; entra.&lt;&#x2F;p&gt;
&lt;p&gt;Utilizando a função &lt;code&gt;ttest_ind&lt;&#x2F;code&gt; da biblioteca &lt;code&gt;scipy.stats&lt;&#x2F;code&gt;, eu consegui calcular o valor t e o valor p (probabilidade de observar um resultado tão extremo quanto o resultado do teste, assumindo que a hipótese nula é verdadeira) em apenas duas linhas de código:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;t, p = stats.ttest_ind(group1, group2)&lt;&#x2F;code&gt; &lt;&#x2F;p&gt;
&lt;p&gt;O resultado fornece uma confirmação rápida e precisa da significância estatística entre os grupos. A beleza disso é que, com Python, não precisamos nos aprofundar nos cálculos – a menos que queiramos.&lt;&#x2F;p&gt;
&lt;p&gt;Para concluir meu experimento, imprimi os resultados, que revelaram a diferença entre as médias dos dois grupos e a probabilidade associada a essa diferença. Se o valor p for menor que o limiar escolhido (geralmente 0,05), podemos rejeitar a hipótese nula de que não há diferença significativa entre as médias dos grupos.&lt;&#x2F;p&gt;
&lt;p&gt;Este é um exemplo prático de como a estatística e a programação andam de mãos dadas no campo da análise de dados. Com Python, podemos simplificar os processos estatísticos complexos e tornar a análise acessível, sem sacrificar a profundidade ou a precisão. Se você está começando em estatística ou é um veterano procurando agilizar sua análise de dados, recomendo vivamente mergulhar nesse mundo onde o Python serve de ponte para a estatística aplicada.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Docker para Bioinformata</title>
		<published>2023-10-10T00:00:00+00:00</published>
		<updated>2023-10-10T00:00:00+00:00</updated>
		<link href="https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/docker/" type="text/html"/>
		<id>https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/docker/</id>
		<content type="html">&lt;p&gt;Desvendando o Docker para Cientistas e Bioinformáticos: Por que essa ferramenta é essencial?&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ola-caros-leitores-e-entusiastas-da-ciencia-e-bioinformatica&quot;&gt;Olá, caros leitores e entusiastas da ciência e bioinformática!&lt;&#x2F;h3&gt;
&lt;p&gt;Hoje, quero compartilhar com vocês algo revolucionário que tem transformado a maneira como executamos e compartilhamos nossas análises e pesquisas: o Docker! Se você já ouviu falar sobre ele mas ainda não entende bem o que é, ou se está se perguntando como ele pode ser relevante para seu trabalho, este post é para você.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;o-que-e-o-docker&quot;&gt;O que é o Docker?&lt;&#x2F;h3&gt;
&lt;p&gt;Imagine que você tem uma receita mágica (ou um algoritmo incrível de bioinformática) que funciona perfeitamente em sua cozinha (ou computador). Agora, você deseja compartilhá-la com colegas de todo o mundo. Mas aí está o problema: nem todas as cozinhas (ou computadores) são iguais. Ingredientes podem variar, utensílios podem ser diferentes e o forno pode não se comportar da mesma maneira.&lt;&#x2F;p&gt;
&lt;p&gt;O Docker entra em cena como uma solução para esse dilema. Ele permite que você &amp;quot;embrulhe&amp;quot; sua aplicação, suas dependências, bibliotecas e até mesmo o sistema operacional em um &amp;quot;container&amp;quot;. Esse container pode ser entendido como uma caixa mágica que tem tudo o que sua aplicação precisa para rodar. E o melhor de tudo? Ele funciona da mesma forma em qualquer &amp;quot;cozinha&amp;quot;!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;por-que-o-docker-e-importante-para-cientistas-e-bioinformaticos&quot;&gt;Por que o Docker é importante para cientistas e bioinformáticos?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Reprodutibilidade: Em ciência, a capacidade de reproduzir resultados é fundamental. Com o Docker, você pode garantir que seu código e análise rodem da mesma maneira, independente do ambiente.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Isolamento: Cansado de conflitos entre bibliotecas e dependências? Com o Docker, cada aplicação fica em seu próprio container, isolado e sem interferências.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Compartilhamento facilitado: Se você desenvolveu uma ferramenta ou realizou uma análise e quer que colegas testem, basta compartilhar o container do Docker. Não é necessário se preocupar se eles têm o ambiente correto configurado.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Escalabilidade: Precisa rodar sua análise em um cluster de computadores ou na nuvem? O Docker facilita esse processo, permitindo que sua aplicação seja distribuída e executada em vários lugares.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;docker-na-pratica-em-bioinformatica&quot;&gt;Docker na prática em bioinformática&lt;&#x2F;h4&gt;
&lt;p&gt;Vamos pensar em um cenário comum na bioinformática: a montagem de genomas. Existem várias ferramentas disponíveis, cada uma com suas próprias dependências e requisitos. Ao invés de gastar horas configurando o ambiente, você pode simplesmente puxar um container que já tem tudo configurado e pronto para uso.&lt;&#x2F;p&gt;
&lt;p&gt;Além disso, se você desenvolveu uma nova ferramenta de análise, pode criar seu próprio container e compartilhá-lo com a comunidade. Isso facilita a adoção de sua ferramenta por outros pesquisadores e garante que ela rode corretamente em qualquer lugar.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;conclusao&quot;&gt;Conclusão&lt;&#x2F;h3&gt;
&lt;p&gt;O Docker é uma ferramenta poderosa que traz inúmeros benefícios para cientistas e bioinformáticos. Ele simplifica o processo de configuração, garante a reproducibilidade e facilita o compartilhamento e distribuição de ferramentas e análises.&lt;&#x2F;p&gt;
&lt;p&gt;Se você ainda não experimentou o Docker, recomendo que dê uma chance. Em pouco tempo, você perceberá o quanto ele pode transformar seu fluxo de trabalho e pesquisa.&lt;&#x2F;p&gt;
&lt;p&gt;Até a próxima, e continue explorando e inovando! 🧬🔬🐳&lt;&#x2F;p&gt;
&lt;p&gt;Gostou do post? Compartilhe suas experiências e dúvidas sobre Docker nos comentários! E não se esqueça de seguir o blog para mais insights e dicas sobre ciência e bioinformática.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Automação com python</title>
		<published>2023-10-02T00:00:00+00:00</published>
		<updated>2023-10-02T00:00:00+00:00</updated>
		<link href="https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/automacao/" type="text/html"/>
		<id>https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/automacao/</id>
		<content type="html">&lt;p&gt;Recentemente, me deparei com um desafio: converter um arquivo PDF para TXT.&lt;br&gt;
No entanto, eu não queria apenas uma conversão simples. &lt;br&gt;
Desejava implementar uma solução que me permitisse aplicar filtros adicionais, mas que também fosse flexível o suficiente para permitir customizações futuras.&lt;br&gt; 
Após algumas pesquisas e testes, desenvolvi o seguinte script:&lt;br&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;import PyPDF2
from tqdm import tqdm


def pdf_to_txt(pdf_path, txt_path):
    with open(pdf_path, &#x27;rb&#x27;) as file:
        # Criando um objeto PDF reader
        pdf_reader = PyPDF2.PdfReader(file)

        # Extraindo texto de cada página
        text = &quot;&quot;
        for page in tqdm(pdf_reader.pages, desc=&quot;Convertendo PDF para TXT&quot;, unit=&quot;página&quot;):
            text += page.extract_text()

    # Salvando o texto em um arquivo .txt
    with open(txt_path, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;) as txt_file:
        txt_file.write(text)


# Usando a função para converter um arquivo PDF em TXT
pdf_to_txt(
    &#x27;caminho_entrada.pdf&#x27;,
    &#x27;caminho_saida.txt&#x27;
)

&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;console de saida&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;Convertendo PDF para TXT: 100%|████████| 1210&#x2F;1210 [00:09&lt;00:00, 131.26página&#x2F;s]
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Sen Cos Tg</title>
		<published>2023-09-30T00:00:00+00:00</published>
		<updated>2023-09-30T00:00:00+00:00</updated>
		<link href="https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/geogebrasencostg/" type="text/html"/>
		<id>https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/geogebrasencostg/</id>
		<content type="html">&lt;p&gt;Aqui está uma atividade que estava realizando no Geogebra:&lt;br&gt;
A ideia é a seguinte:&lt;br&gt;
Cos(x + a), Sen(x + a), Tg(x + a)&lt;br&gt;
Onde
a é uma variável que varia em um intervalo específico de 
[−5; 5].&lt;br&gt;
A manipulação do valor de a permite observar diferentes translações e transformações nas funções trigonométricas.&lt;br&gt;
Essa abordagem ajuda a entender melhor o comportamento e as propriedades dessas funções.&lt;br&gt;
Fiquei surpreso com alguns padrões e insights que surgiram ao fazer isso.&lt;br&gt;
Recomendo essa experimentação para quem deseja aprofundar seus conhecimentos em trigonometria.&lt;br&gt;&lt;&#x2F;p&gt;
&lt;iframe
    src=&quot;https:&#x2F;&#x2F;www.geogebra.org&#x2F;calculator&#x2F;xetkrkh3?embed&quot;
    width=&quot;800&quot; height=&quot;600&quot; allowfullscreen
    style=&quot;border: 1px solid #e4e4e4;border-radius: 4px;&quot;
    frameborder=&quot;0&quot;&gt;
&lt;&#x2F;iframe&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>IoT</title>
		<published>2023-09-30T00:00:00+00:00</published>
		<updated>2023-09-30T00:00:00+00:00</updated>
		<link href="https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/iot/" type="text/html"/>
		<id>https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/iot/</id>
		<content type="html">&lt;p&gt;Introdução:
A era digital tem sido palco de inúmeras inovações, mas uma das mais transformadoras é, sem dúvida, a Internet das Coisas (IoT). Esta tecnologia, que se refere à conexão de dispositivos cotidianos à internet, promete revolucionar não apenas a forma como interagimos com os objetos ao nosso redor, mas também como vivemos, trabalhamos e nos relacionamos em sociedade.&lt;&#x2F;p&gt;
&lt;p&gt;Pequeno Parágrafo:
A IoT está em plena ascensão e já se faz presente em nossas vidas de maneiras que muitas vezes nem percebemos. Seja em geladeiras que nos avisam quando os alimentos estão acabando, termostatos que ajustam a temperatura de nossa casa antes mesmo de chegarmos, ou em cidades inteligentes que otimizam o fluxo de tráfego e a gestão de recursos, a IoT está trazendo uma nova era de conveniência e eficiência. Além disso, com a crescente integração de sensores e dispositivos, há um vasto potencial para inovações ainda mais disruptivas no futuro.&lt;&#x2F;p&gt;
&lt;p&gt;Conclusão:
Em resumo, a Internet das Coisas não é apenas uma tendência tecnológica passageira, mas sim uma mudança fundamental na forma como a tecnologia será integrada em nosso cotidiano. À medida que avançamos para um mundo cada vez mais conectado, é essencial compreender e adaptar-se a essa revolução, garantindo que suas promessas sejam cumpridas de maneira segura, ética e benéfica para todos.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Post Sobre Geogebra</title>
		<published>2023-09-28T00:00:00+00:00</published>
		<updated>2023-09-28T00:00:00+00:00</updated>
		<link href="https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/geogebra/" type="text/html"/>
		<id>https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/geogebra/</id>
		<content type="html">&lt;p&gt;Aqui esta com exemplo de post de blog usando JavaScript e geogebra
em breve mais posts sobre&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>My first post</title>
		<published>2023-09-26T00:00:00+00:00</published>
		<updated>2023-09-26T00:00:00+00:00</updated>
		<link href="https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/first/" type="text/html"/>
		<id>https://gustavogarciapereira.github.io/meu_blog_com_zola/blog/first/</id>
		<content type="html">&lt;p&gt;No vasto universo das ferramentas de construção de sites estáticos,
o Zola tem vindo a destacar-se como uma opção poderosa e eficiente.
Construído na linguagem de programação Rust, o Zola é conhecido pela
sua velocidade impressionante e pela sua abordagem integrada que combina
um motor de templates e um servidor de conteúdos estáticos. Ao contrário de
outras ferramentas que requerem a integração de componentes adicionais para a
renderização ou otimização de conteúdos, o Zola oferece tudo de forma nativa.
Isto significa que os desenvolvedores e designers podem concentrar-se em criar
conteúdo impressionante sem se preocuparem com a complexidade técnica.
Com uma curva de aprendizado suave e uma comunidade ativa, o Zola tem tudo para se
tornar a ferramenta de escolha para muitos profissionais e entusiastas do web design.
Se você está buscando uma ferramenta para construir um site estático que seja rápido,
seguro e fácil de usar, vale a pena dar uma olhada no Zola.&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
